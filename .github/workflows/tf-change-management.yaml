name: "Terraform CI"

on:
  workflow_call:
    inputs:
      dir:
        required: true
        type: string
      bucket_name:
        required: true
        type: string
      bucket_key:
        required: true
        type: string
      lock_dynamodb_name:
        required: true
        type: string
      region:
        required: true
        type: string
    secrets:
      aws_access_key_id:
        required: true
      aws_secret_key_id:
        required: true

env:
  AWS_ACCESS_KEY_ID: ${{ secrets.aws_access_key_id }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.aws_secret_key_id }}
  BUCKET_NAME: ${{ inputs.bucket_name }}
  BUCKET_KEY: ${{ inputs.bucket_key }}
  LOCK_DYNAMODB_NAME: ${{ inputs.lock_dynamodb_name }}
  REGION: ${{ inputs.region }}

jobs:
  terraform:
    name: "Test & Plan"
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./${{inputs.dir}}

    steps:
      - name: Checkout the code to the runner
        uses: actions/checkout@v4

      - name: Setup Terraform
        id: setup
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: "1.8.2"

      - name: Terraform Init
        id: init
        run: >
          terraform init 
          -backend-config="bucket=$BUCKET_NAME" 
          -backend-config="key=$BUCKET_KEY" 
          -backend-config="region=$REGION" 
          -backend-config="dynamodb_table=$LOCK_DYNAMODB_NAME"

      - name: Terraform Validate
        id: validate
        run: >
          terraform validate

      - name: Security Scan with TFSec
        id: tfsec
        uses: aquasecurity/tfsec-action@v1.0.0
        with:
          soft_fail: true

      - name: Terraform Plan
        id: plan
        run: >
          terraform plan -no-color -input=false
        continue-on-error: true

      - uses: actions/github-script@v6
        if: github.event_name == 'pull_request'
        env:
          PLAN: "terraform\n${{ steps.plan.outputs.stdout }}"
        with:
          script: |
            const output = `#### Terraform Format and Style üñå\`${{ steps.fmt.outcome }}\`
            #### Terraform Initialization ‚öôÔ∏è\`${{ steps.init.outcome }}\`
            #### Terraform Validation \`${{ steps.validate.outcome }}\`
            #### Terraform Validation \`${{ steps.tfsec.outcome }}\`
            #### Terraform Plan \`${{ steps.plan.outcome }}\`

            <details><summary>Show Plan</summary>

            \`\`\`\n
            ${process.env.PLAN}
            \`\`\`

            </details>
            *Pushed by: @${{ github.actor }}, Action: \`${{ github.event_name }}\`*`;

            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: output
            })
